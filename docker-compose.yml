version: '3.8'

services:
  # Next.js Frontend + Node.js Backend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_FIREBASE_API_KEY=${NEXT_PUBLIC_FIREBASE_API_KEY}
      - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=justicebotai.firebaseapp.com
      - NEXT_PUBLIC_FIREBASE_PROJECT_ID=justicebotai
      - NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=justicebotai.appspot.com
      - NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}
      - NEXT_PUBLIC_FIREBASE_APP_ID=${NEXT_PUBLIC_FIREBASE_APP_ID}
      - GOOGLE_PROJECT_ID=justicebotai
      - NEXT_PUBLIC_RECAPTCHA_SITE_KEY=${NEXT_PUBLIC_RECAPTCHA_SITE_KEY}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - NEXT_PUBLIC_FREE_TIER_ENABLED=true
      - NEXT_PUBLIC_WEB_HOST=localhost
      - NEXT_PUBLIC_BACKEND_PORT=5000
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000
      - WEB_HOST=localhost
      - FRONTEND_PORT=3000
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - python-backend
      - postgres
    networks:
      - app-network

  # Python Flask Backend
  python-backend:
    build:
      context: ./Justice-bot-smartdisputefinal/export_pkg
      dockerfile: Dockerfile
    ports:
      - "8000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/smartdispute
      - SESSION_SECRET=${SESSION_SECRET:-your-secret-key-here}
    volumes:
      - ./Justice-bot-smartdisputefinal/uploads:/app/uploads
    depends_on:
      - postgres
    networks:
      - app-network

  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=smartdispute
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./Justice-bot-smartdisputefinal/export_pkg/setup_database.sql:/docker-entrypoint-initdb.d/setup_database.sql
    ports:
      - "5432:5432"
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge